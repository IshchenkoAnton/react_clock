{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","timerId","state","date","Date","this","window","setInterval","setState","console","log","name","props","clearInterval","toLocaleTimeString","React","Component","App","isVisible","showClock","setName","random","Math","floor","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,aADF,IAGEC,MAAe,CACbC,KAAM,IAAIC,MAJd,uDAOE,WAAqB,IAAD,OAClBC,KAAKJ,QAAUK,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEL,KAAM,IAAIC,OAE1BK,QAAQC,IAAI,EAAKR,MAAMC,QACtB,OAZP,gCAeE,YAAqC,IAAhBQ,EAAe,EAAfA,KACfN,KAAKO,MAAMD,OAASA,GAEtBF,QAAQC,IAAR,qCAA0CC,EAA1C,eAAqDN,KAAKO,MAAMD,SAlBtE,kCAsBE,WACEE,cAAcR,KAAKJ,WAvBvB,oBA0BE,WACE,IAAQE,EAASE,KAAKH,MAAdC,KAER,OACE,4BACGA,EAAKW,2BA/Bd,GAA2BC,IAAMC,WCD3BC,E,4MACJf,MAAQ,CACNgB,WAAW,EACXP,KAAM,G,EAGRQ,UAAY,WACV,EAAKX,UAAS,kBAAoB,CAAEU,WAAtB,EAAGA,e,EAGnBE,QAAU,WACR,IAAMC,EAASC,KAAKC,MAAsB,IAAhBD,KAAKD,UAE/B,EAAKb,SAAS,CACZG,KAAMU,K,4CAIV,WACE,MAGIhB,KAAKH,MAFPgB,EADF,EACEA,UACAP,EAFF,EAEEA,KAGF,OACE,sBAAKa,UAAU,MAAf,UACE,6CACA,sCAEGb,KAEH,wBACEc,KAAK,SACLC,QAASrB,KAAKc,UAFhB,6BAMA,wBACEM,KAAK,SACLC,QAASrB,KAAKe,QAFhB,oBAMA,8CAEGF,GAAa,cAAC,EAAD,CAAOP,KAAMA,c,GA7CnBI,IAAMC,WAoDTC,IC1DfU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a82102f4.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: number;\n};\n\ntype State = {\n  date: Date;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  timerId?:number;\n\n  state: State = {\n    date: new Date(),\n  };\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ date: new Date() });\n      // eslint-disable-next-line\n      console.log(this.state.date);\n    }, 1000);\n  }\n\n  componentDidUpdate({ name }: Props) {\n    if (this.props.name !== name) {\n      // eslint-disable-next-line no-console\n      console.log(`The Clock was renamed from ${name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { date } = this.state;\n\n    return (\n      <p>\n        {date.toLocaleTimeString()}\n      </p>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\ntype State = {\n  isVisible: boolean,\n  name: number\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    isVisible: true,\n    name: 0,\n  };\n\n  showClock = () => {\n    this.setState(({ isVisible }) => ({ isVisible: !isVisible }));\n  };\n\n  setName = () => {\n    const random = Math.floor(Math.random() * 100);\n\n    this.setState({\n      name: random,\n    });\n  };\n\n  render() {\n    const {\n      isVisible,\n      name,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <p>\n          Name:\n          {name}\n        </p>\n        <button\n          type=\"button\"\n          onClick={this.showClock}\n        >\n          Hide/Show Clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.setName}\n        >\n          Rename\n        </button>\n        <p>\n          Current time:\n          {isVisible && <Clock name={name} />}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}